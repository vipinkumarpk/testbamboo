<?php
return array(
    'doctrine' => array(
        'driver' => array(
            // overriding zfc-user-doctrine-orm's config
            'zfcuser_entity' => array(
                'class' => 'Doctrine\ORM\Mapping\Driver\AnnotationDriver',
                'paths' => __DIR__ . '/../src/FMCUser/Entity',
            ),

            'orm_default' => array(
                'drivers' => array(
                    'FMCUser\Entity' => 'zfcuser_entity',
                ),
            ),
        ),
    ),

    'zfcuser' => array(
        // telling ZfcUser to use our own class
        'user_entity_class'       => 'FMCUser\Entity\User',
        // telling ZfcUserDoctrineORM to skip the entities it defines
        'enable_default_entities' => false,
    ),

    'bjyauthorize' => array(

        //'unauthorized_strategy' => 'BjyAuthorize\View\RedirectionStrategy',        
        // set the 'guest' role as default (must be defined in a role provider)
        'default_role' => 'guest',

        // Using the authentication identity provider, which basically reads the roles from the auth service's identity
        'identity_provider' => 'BjyAuthorize\Provider\Identity\AuthenticationIdentityProvider',

/*
        'resource_providers' => array(
            'BjyAuthorize\Provider\Resource\Config' => array(
                'application' => array(),
        )),

        'rule_providers' => array(
            'BjyAuthorize\Provider\Rule\Config' => array(
               'allow' => array(
                    array(array('user'), 'application', array('recruiter') ),
        ))),
 
*/
       'resource_providers' => array(
            'BjyAuthorize\Provider\Resource\Config' => array(
                'mahe' => array(),
                'recruiter' => array(),
                'team' => array(),
                'report' => array(),
                'zfcuser' => array(),
                'ScnSocialAuth-User' => array(),
            ),
        ),      



        'rule_providers' => array(
            'BjyAuthorize\Provider\Rule\Config' => array(
                'allow' => array(
                    array(array('mahe'), 'mahe', array('list', 'add')),
                    array(array('recruiter'), 'report', array('list', 'add')),
                    array(array('recruiter'), 'recruiter', array('list', 'add')),
                    array(array('recruiter'), 'team', array('list', 'add')),
                    array(array('guest'), 'zfcuser', 'login'),
                    array(array('guest'), 'ScnSocialAuth-User', 'login'),
                    array(array('user'), 'zfcuser', 'logout'),
                ),


                'deny' => array(
                    array(array('user'), 'zfcuser', 'login'),
                    array(array('guest'), 'zfcuser', 'logout'),                    
                ),


            ),
        ),        


/*

        'rule_providers' => array(
            'BjyAuthorize\Provider\Rule\Config' => array(
                'allow' => array(
                    // allow guests and users (and admins, through inheritance)
                    // the "wear" privilege on the resource "pants"
                    array(array('guest', 'user'), 'pants', 'wear')
                ),

                // Don't mix allow/deny rules if you are using role inheritance.
                // There are some weird bugs.
                'deny' => array(
                    // ...
                ),
            ),
        ),

*/        
        'role_providers'        => array(
            // using an object repository (entity repository) to load all roles into our ACL
            'BjyAuthorize\Provider\Role\ObjectRepositoryProvider' => array(
                'object_manager'    => 'doctrine.entitymanager.orm_default',
                'role_entity_class' => 'FMCUser\Entity\Role',
            ),
        ),

        /* Currently, only controller and route guards exist */

        'guards' => array(
            /* If this guard is specified here (i.e. it is enabled), it will block
             * access to all controllers and actions unless they are specified here.
             * You may omit the 'action' index to allow access to the entire controller
             */
                
/*
        'BjyAuthorize\Guard\Controller' => array(
                array('controller' => 'index', 'action' => 'index', 'roles' => array('guest','user')),
                array('controller' => 'Application\Controller\Index', 'roles' => array('guest')),

                array('controller' => 'ScnSocialAuth\Controller\User', 'roles' => array('guest')),

                array('controller' => 'goalioforgotpassword_forgot', 'roles' => array('guest')),
                array('controller' => 'Application\Controller\Mahe', 'roles' => array('mahe')),
                array('controller' => 'Application\Controller\Recruiter', 'roles' => array('recruiter')),
                array('controller' => 'Application\Controller\Team', 'roles' => array('recruiter')),
                array('controller' => 'Application\Controller\Report', 'roles' => array('recruiter')),
                array('controller' => 'zfcuser', 'roles' => array()),
                //array('controller' => 'index', 'action' => 'stuff', 'roles' => array('user')),
                // You can also specify an array of actions or an array of controllers (or both)
                // allow "guest" and "admin" to access actions "list" and "manage" on these "index",
                // "static" and "console" controllers
                


                // Below is the default index action used by the ZendSkeletonApplication
                // array('controller' => 'Application\Controller\Index', 'roles' => array('guest', 'user')),
            ),

*/

            /* If this guard is specified here (i.e. it is enabled), it will block
             * access to all routes unless they are specified here.
             */
/*
            'BjyAuthorize\Guard\Route' => array(
                array('route' => 'zfcuser', 'roles' => array('user')),
                array('route' => 'zfcuser/logout', 'roles' => array('user')),
                array('route' => 'zfcuser/login', 'roles' => array('guest')),
                array('route' => 'zfcuser/register', 'roles' => array('guest')),
               // array('route' => 'application/mahe/index', 'roles' => array('mahe')),
                array('route' => 'home/default', 'roles' => array('mahe')),
                array('route' => 'home/default', 'roles' => array('guest')),
                // Below is the default index action used by the ZendSkeletonApplication
                array('route' => 'home', 'roles' => array('guest', 'user')),
            ),


            'BjyAuthorize\Guard\Route' => array(
                array('route' => 'zfcuser',                 'roles' => array('guest')),
                array('route' => 'zfcuser/logout',          'roles' => array('user')),
                array('route' => 'zfcuser/login',           'roles' => array('guest')),
                array('route' => 'zfcuser/register',        'roles' => array('guest')),
                array('route' => 'zfcuser/changepassword',  'roles' => array('user')),
                array('route' => 'zfcuser/changeemail',     'roles' => array('user')),
                array('route' => 'profile',     'roles' => array('user')),
                array('route' => 'profile/view/',     'roles' => array('user')),

                array('route' => 'zfcuser/forgotpassword',  'roles' => array('guest')),
               array('route' => 'zfcuser/resetpassword',  'roles' => array('guest')),




               array('route' => 'mahe',     'roles' => array('mahe')),
               array('route' => 'recruiter',     'roles' => array('recruiter')),
               array('route' => 'report',     'roles' => array('recruiter')),

                array('route' => 'home', 'roles' => array('guest')),
                array('route' => 'home/default', 'roles' => array('guest')),

                array('route' => 'scn-social-auth-user/login', 'roles' => array('guest')),
                array('route' => 'scn-social-auth-user/logout', 'roles' => array('guest')),
                array('route' => 'scn-social-auth-user/login/provider', 'roles' => array('guest')),
                array('route' => 'scn-social-auth-hauth', 'roles' => array('guest')),
                array('route' => 'scn-social-auth-user/authenticate/provider', 'roles' => array('guest')),
                array('route' => 'scn-social-auth-user', 'roles' => array('guest')),
                array('route' => 'scn-social-auth-user/register', 'roles' => array('guest')),


                

                
            ),

*/
    
        ),



    ),
);
